{
    "name": "yahoo-arrow",
    "description": "FrontEnd Testing Framework",
    "version": "0.0.76",
    "homepage": "https://github.com/yahoo/arrow",
    "repository": {
        "type": "git",
        "url": "https://github.com/yahoo/arrow.git"
    },
    "man": [
        "../man/arrow.1"
    ],
    "main": "./index.js",
    "scripts": {
        "help": "arrow --help",
        "test": "ytestrunner --yui3 --include **/tests/**/*-tests.js --exclude=**/node_modules/**/*-tests.js --cov-exclude=**/tests/**/*   --cov-exclude=**/node_modules/**/* --cov-exclude=**/ext-lib/**/* --yconfig ytestrunner.json -v -c --save-coverage --save-results",
        "func-test": "cd ./tests/functional && npm install && npm test"
    },
    "yahoo": {
        "bugzilla": {
            "product": "Lego QE Platform",
            "component": "Arrow"
        }
    },
    "author": {
        "name": "Pranav Verma",
        "email": "vpranav@yahoo-inc.com"
    },
    "contributors": [
        {
            "name": "Sushant Kumar",
            "email": "sushantk@yahoo-inc.com"
        },
        {
            "name": "Ivan Alonso",
            "email": "ivana@yahoo-inc.com"
        }
    ],
    "bin": {
        "arrow": "./index.js",
        "arrow_server": "arrow_server/server.js",
        "arrow_selenium": "arrow_selenium/selenium.js"
    },
    "engines": [
        "node >=0.6"
    ],
    "dependencies": {
        "glob": "3.1.11",
        "nopt": "2.0.0",
        "colors": "0.6.0-1",
        "express": "3.0.0",
        "yui": "3.6.0",
        "JSV": "4.0.2",
        "log4js": "0.5.1",
        "clone": "0.1.0",
        "useragent": "1.1.0",
        "istanbul": "0.1.25",
        "uglify-js": "1.3.4",
        "xml-writer": "1.2.3",
        "ycb": "1.0.4",
        "async": "~0.2.5",
        "oauth": "0.9.8",
        "xml2js": "0.1.14",
        "cheerio": "0.9.2",
        "cheerio-select": "0.0.3",
        "mkdirp": "0.3.5"
    },
    "devDependencies": {
        "ytestrunner": "0.3.3",
        "mockery": "1.1.2"
    },
    "readme": "\n#Arrow\n\n[![Build Status](https://secure.travis-ci.org/yahoo/arrow.png?branch=master)](http://travis-ci.org/yahoo/arrow)\n\n##Overview\n\nArrow is a test framework designed to promote test-driven JavaScript development. Arrow provides a consistent test creation and execution environment for both Developers and Quality Engineers.\n\nArrow aims to completely remove the line between developmentâ€™s Unit tests, and Functional and Integration tests by providing a uniform way to create and execute both.\n\nArrow itself is a thin, extensible layer that marries JavaScript, NodeJS and Selenium. Arrow allows you to write tests using YUI-Test and execute those tests using NodeJS or Selenium. Additionally, Arrow provides a rich mechanism for building, organizing and executing test and test scenarios.\n\n\n##Install\n\n```\nnpm install -g yahoo-arrow\n```\n\n\n##Options\n\n\n* **--help** display this help page\n* **--version** display installed arrow version\n* **--lib** comma separated list of js files needed by the test\n* **--page** path to the mock or production html page, for example: http://www.yahoo.com or mock.html\n* **--driver** one of selenium|nodejs. (default: selenium)\n* **--shareLibPath** comma separated list of directories to be scaned to load module automatically\n* **--browser** firefox|chrome|opera|reuse.  Specify browser version with a hypen, ex.: firefox-4.0 or opera-11.0 (default: firefox)\n* **--report** true/false. Creates report files in junit and json format, and also prints a consolidated test report summary on console\n* **--reportFolder** : (optional) folderPath.  creates report files in that folder. (default: descriptor folder path)\n* **--testName** comma separated list of test names defined in test descriptor. all other tests will be ignored\n* **--group** comma separated list of groups defined in test descriptor, all other groups will be ignored\n* **--logLevel** TRACE|DEBUG|INFO|WARN|ERROR|FATAL (default: INFO)\n* **--dimension** a custom dimension file for defining ycb contexts\n* **--context** name of ycb context\n* **--seleniumHost** : (optional) override selenium host url (example: --seleniumHost=http://host.com:port/wd/hub)\n* **--capabilities** : (optional) the name of a json file containing webdriver capabilities required by your project\n* **--startProxyServer** : (optional) true/false. Starts a proxy server, intercepting all selenium browser calls\n* **--routerProxyConfig** : (optional) filePath. Expects a Json file, allows users to modify host and headers for all calls being made by browser. Also supports recording of select url calls ( if you mark \"record\" : true)\n        \n        \n         Example Json :\n                       {\n                           \"yahoo.com\": {\n                               \"newHost\": \"x.x.x.x (your new host ip/name)\",\n                               \"headers\":[\n                                   {\n                                       \"param\": \"<param>\",\n                                       \"value\": \"<val>\"\n                                   }\n                               ],\n                               \"record\": true\n                            },\n                            \"news.yahoo.com\": {\n                               \"newHost\": \"x.x.x.x (your new host ip/name)\",\n                               \"headers\":[\n                                   {\n                                       \"param\": \"<param>\",\n                                       \"value\": \"<val>\"\n                                   }\n                               ],\n                               \"record\": true\n                            }\n                       }\n        \n* **--exitCode** : (optional) true/false. Causes the exit code to be non-zero if any tests fail (default: false)\n* **--coverage** : (optional) true/false. creates code-coverage report for all js files included/loaded by arrow (default: false)\n        \n##Examples\n\nBelow are some examples to help you get started.\n\n###Unit test:\n\n```\narrow --lib=../src/greeter.js test-unit.js\n```\n\n###Unit test with a mock page:\n\n```\narrow --page=testMock.html --lib=./test-lib.js test-unit.js\n```\n\n###Unit test with --shareLibPath to replace --lib:\nPlease note that the folder passed to --shareLibPath need follow layout convention as described in arrow cookbook \"Arrow In-Depth\"\n\n```\narrow --page=testMock.html --shareLibPath=../ test-unit.js\n```\n\n###Unit test with selenium:\n\n```\narrow --page=testMock.html --lib=./test-lib.js --driver=selenium test-unit.js\n```\n\n###Integration test:\n\n```\narrow --page=http://www.hostname.com/testpage --lib=./test-lib.js test-int.js\n```\n\n###Integration test:\n\n```\narrow --page=http://www.hostname.com/testpage --lib=./test-lib.js --driver=selenium test-int.js\n```\n\n###Custom controller:\n\n```\narrow --controller=custom-controller.js --driver=selenium\n```\n\n\n##Arrow Dependencies\n\nNPM Dependencies\n* **glob** https://github.com/isaacs/node-glob\n* **nopt** https://github.com/isaacs/nopt\n* **colors** https://github.com/Marak/colors.js\n* **express** https://github.com/visionmedia/express\n* **yui** http://github.com/yui/yui3\n* **JSV** http://github.com/garycourt/JSV\n* **log4js** https://github.com/nomiddlename/log4js-node\n* **clone** https://github.com/pvorb/node-clone\n* **useragent** https://github.com/3rd-Eden/useragent\n* **istanbul** https://github.com/yahoo/istanbul\n* **uglify-js** https://github.com/mishoo/UglifyJS\n* **xml-writer** https://github.com/lindory-project/node-xml-writer\n* **ycb** https://github.com/yahoo/ycb\n* **async** https://github.com/caolan/async\n\nNPM Dev Dependencies\n* **mockery** https://github.com/mfncooper/mockery\n* **ytestrunner** https://github.com/gotwarlost/ytestrunner\n\nApart from above mentioned npm modules, Arrow also relies on these two projects\n\n* **selenium** https://code.google.com/p/selenium/\n* **ghostdriver** https://github.com/detro/ghostdriver\n",
    "readmeFilename": "README.md",
    "_id": "yahoo-arrow@0.0.76",
    "_from": "yahoo-arrow@0.0.76"
}
